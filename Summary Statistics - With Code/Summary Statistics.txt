-- Arithmetic Mean/Average -- 
SELECT
  AVG(measure_value)
FROM health.user_logs; 

-- Measure_value counts --
SELECT
  measure,
  COUNT(*) AS counts
FROM health.user_logs
GROUP BY measure
ORDER BY counts;

-- Average across each measure --
SELECT
  measure, 
  ROUND(AVG(measure_value), 2) AS average,
  COUNT(*) AS counts
FROM health.user_logs
GROUP BY measure
ORDER BY counts DESC;

-- create sample data to demonstrate mean, median and mode --
WITH sample_data (example_values) AS (
 VALUES
 (82), (51), (144), (84), (120), (148), (148), (108), (160), (86)
)
SELECT
  AVG(example_values) AS mean_value,
  PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY example_values) AS median_value,
  MODE() WITHIN GROUP (ORDER BY example_values) AS mode_value
FROM sample_data;

-- median, mode, mean of measure_value where measure is weight only -- 
SELECT
  PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY measure_value) AS median_value, 
  MODE() WITHIN GROUP (ORDER BY measure_value) AS mode_value, 
  AVG(measure_value) AS mean_value
FROM health.user_logs
WHERE measure = 'weight'; 

-- min, max and range for measure_value where measure is weight only --
SELECT
  MIN(measure_value) AS min_value, 
  MAX(measure_value) AS max_value, 
  MAX(measure_value) - MIN(measure_value) AS range_value
FROM health.user_logs
WHERE measure = 'weight'
  AND measure_value BETWEEN 1 AND 201;

-- using query to find min, max and range --
EXPLAIN ANALYZE
WITH min_max_values AS (
  SELECT
    MIN(measure_value) AS minimum_value,
    MAX(measure_value) AS maximum_value
  FROM health.user_logs
  WHERE measure = 'weight'
    AND measure_value BETWEEN 1 AND 201
)
SELECT
  minimum_value,
  maximum_value,
  maximum_value - minimum_value AS range_value
FROM min_max_values;

-- create sample data to demonstrate mean, median and mode --
WITH sample_data (example_values) AS (
 VALUES
 (82), (51), (144), (84), (120), (148), (148), (108), (160), (86)
)
SELECT
  ROUND(VARIANCE(example_values), 2) AS variance_value,
  ROUND(STDDEV(example_values), 2) AS standard_dev_value,
  ROUND(AVG(example_values), 2) AS mean_value,
  PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY example_values) AS median_value,
  MODE() WITHIN GROUP (ORDER BY example_values) AS mode_value
FROM sample_data;

-- Summary statistics for health.user_logs data --
SELECT
  'weight' AS measure,
  ROUND(MIN(measure_value), 2) AS min_value,
  ROUND(MAX(measure_value), 2) AS max_value,
  ROUND(AVG(measure_value), 2) AS avg_value,
  ROUND(
    CAST(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY measure_value) AS numeric), 
    2
  ) AS median_value,
  ROUND(
    MODE() WITHIN GROUP (ORDER BY measure_value),
    2
  ) AS mode_value, 
  ROUND(STDDEV(measure_value), 2) AS std_value, 
  ROUND(VARIANCE(measure_value), 2) AS variance_value
FROM health.user_logs
WHERE measure = 'weight'
  AND measure_value BETWEEN 1 AND 201;

-- EXERCISES -- 
SELECT
  *
FROM health.user_logs;

-- 1 -- 
SELECT
  'blood_glucose' AS measure, 
  ROUND(AVG(measure_value), 2) AS avg_value,
  ROUND(
    CAST(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY measure_value) AS NUMERIC), 
    2
  ) AS median_value, 
  ROUND(
    MODE() WITHIN GROUP (ORDER BY measure_value),
    2
  ) AS mode_value 
FROM health.user_logs
WHERE measure = 'blood_glucose'
  AND measure_value BETWEEN 1 AND 201;

-- 2 -- need to remove '0' value from measure_value
SELECT
  measure_value,
  COUNT(*) AS measure_frequency
FROM health.user_logs
WHERE measure_value > 0
GROUP BY measure_value
ORDER by measure_frequency DESC 
LIMIT 10; 

-- 3 -- 
WITH cte_blood_glucose_stats AS (
  SELECT
    AVG(measure_value) AS mean_value,
    PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY measure_value) AS median_value,
    MODE() WITHIN GROUP (ORDER BY measure_value) AS mode_value,
    STDDEV(measure_value) AS stddev_value
  FROM health.user_logs
  WHERE measure = 'blood_glucose'
   AND measure_value > 0
)
SELECT
  ( mean_value - mode_value ) / stddev_value AS pearson_corr_1,
  3 * ( mean_value - median_value ) / stddev_value AS pearson_corr_2
FROM cte_blood_glucose_stats;